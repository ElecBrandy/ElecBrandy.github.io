<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Elecbrandy</title>
    <link>https://elecbrandy.github.io/</link>
    <description>Recent content in Home on Elecbrandy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://elecbrandy.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[42cursus] Born2beroot</title>
      <link>https://elecbrandy.github.io/posts/42cursus/born2beroot/</link>
      <pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/42cursus/born2beroot/</guid>
      <description>YOU CAN DO ANYTHING YOU WANT TO DO, VIRTUAL MACHINE, THIS IS YOUR WORLD</description>
    </item>
    <item>
      <title>05. Install</title>
      <link>https://elecbrandy.github.io/posts/post-5/</link>
      <pubDate>Fri, 05 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/post-5/</guid>
      <description>Now, let&amp;rsquo;s launch hugo blog with the freshpink theme. There are two main ways to apply the theme to your hugo blog. There are two ways to apply the theme to hugo blog: using a submodule or downloading the file directly. Let&amp;rsquo;s take a look at each one and apply the theme slowly.&#xA;How to Install&#xA;Method 1: Install as a Git Submodule 1. Navigate to Your Hugo Site Directory Open a terminal and change directory to your Hugo site root.</description>
    </item>
    <item>
      <title>04. Shortcut</title>
      <link>https://elecbrandy.github.io/posts/post-4/</link>
      <pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/post-4/</guid>
      <description>On this page, we&amp;rsquo;ll introduce you to shortcuts that FreshPink supports for pages. We&amp;rsquo;ll be adding more of these in the future.&#xA;alert&#xA;This works similarly to a button that lets you jump to a link of your choice. You can associate this with a specific tag, home, post, etc.&#xA;{{&amp;lt; alert &amp;gt;}} &amp;lt;a href=&amp;#34;https://example.org/&amp;#34;&amp;gt;placeholder&amp;lt;/a&amp;gt; {{&amp;lt; /alert &amp;gt;}} @example placeholder freshquote&#xA;This is to help you use more customized quotes.</description>
    </item>
    <item>
      <title>03. Features</title>
      <link>https://elecbrandy.github.io/posts/post-3/</link>
      <pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/post-3/</guid>
      <description>On this page, we&amp;rsquo;ll introduce you to the various features that FreshPink supports for pages. This theme describes the Wide Image Area, Progress-bar, GitHub Chart, and Back to Top Button.&#xA;Wide Image Area&#xA;This theme provides Wide Image Area functionality. You can insert any Wide Image Area of your choice at the top of the .md file following the toml form: featured_image = &amp;quot; &amp;quot;. By default, basic.png from the static folder is set, but you can customize it with any image link or address of your choice.</description>
    </item>
    <item>
      <title>02. Color set</title>
      <link>https://elecbrandy.github.io/posts/post-2/</link>
      <pubDate>Tue, 02 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/post-2/</guid>
      <description>Color Set&#xA;This theme supports light/dark mode. You can switch between the modes via the toggle in the top right corner of the header.&#xA;@root primary-color #FF53B0 white-color #FFFFFF lgray-color #f2f2f2 dgray-color #282828 black-color #181818 @light background-color #FFFFFF gray-color #282828 text-color #181818 @dark background-color #181818 gray-color #f2f2f2 text-color #FFFFFF CSS code&#xA;This is the CSS that represents the above color settings. If you want to change the color settings, you can do so in assets/css/main.</description>
    </item>
    <item>
      <title>01. FreshPink</title>
      <link>https://elecbrandy.github.io/posts/post-1/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/post-1/</guid>
      <description>What is the FreshPink?&#xA;Introducing FreshPink, a Hugo blog theme designed specifically for developers embarking on creating or enhancing their development blog. With an emphasis on simplicity and functionality, FreshPink offers a clean and straightforward design, complemented by a vibrant fresh pink color scheme, and packed with features that cater to the unique needs of developer blogs.&#xA;Features&#xA;Clean and Straightforward Design&#xA;Lightweight for Easy Customization&#xA;Vibrant Main Color Scheme</description>
    </item>
    <item>
      <title>파일 디스크립터</title>
      <link>https://elecbrandy.github.io/posts/cs101/filedescriptor/</link>
      <pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/cs101/filedescriptor/</guid>
      <description>운영 체제에서 파일이나 입출력 자원을 식별하기 위해 사용하는 정수형 식별자</description>
    </item>
    <item>
      <title>LVM</title>
      <link>https://elecbrandy.github.io/posts/cs101/lvm/</link>
      <pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/cs101/lvm/</guid>
      <description>LVM LVM이란? Linux Volume Manager [[Linux]]에서 복잡한 스토리지 구성을 효율적으로 관리하기 위한 시스템 물리적 디스크를 하나의 논리적 볼륨으로 결합할 수 있고, 볼륨의 크기를 쉽게 조정 가능 LVM 특징 기존 방식과 LVM 방식 기존 방식 [[File system]]이 물리적 블록장치와 직접 상호작용 마운트된 파티션의 용량이 가득 차 이동 시 추가 디스크 장착 추가된 디스크에 파티션 생성 및 포맷 새로운 마운트 포인트(b)를 만들고 추가한 파티션 마운트 기존 데이터를 (b)에 이동 기존 파티션 언마운트 후 새 포인트와 연결 LVM 방식 [[File system]]이 LVM이 만든 가상의 블록 장치에 상호작용함 실제 블록 장치를 추상화하여 더 유연한 접근이 가능함 마운트된 파티션의 용량이 가득 차 이동 시 추가 디스크 장착 추가 디스크에 Partition을 만들고 pv 초기화 pv를 vg에 추가하고 해당 논리 볼륨 사이즈 증가 LVM 단위 구성 PV Physical Volume LVM에서 블록장치에 접근하기 위해서 PV로 초기화가 필요 PE Physical Extent PV를 구성하는 일정한 크기의 블록으로 LVM2에서 기본 크기가 4MB LV의 LE와 1:1로 대응 VG Volume Group PV들의 집합으로 LV를 할당할 수 있는 공간 PV로 초기화된 장치들은 VG로 통합됨 사용자는 VG 안에서 유연성 높게 공간을 쪼개 LV 생성 가능 LV Logical Volume 사용자가 최종적으로 다루게 되는 논리적 스토리지 LV의 유형 Linear LV 선형으로 PV를 모아 LV로 만드는 방법 Striped LV 대량의 순차적 읽기/쓰기 작업의 경우 효율적으로 높일 수 있음 선형이 아니라 여러 PV에 번갈아가며 기록하는 방법 결국 분산기록이며, 읽고 쓰기가 병렬로 실행 가능 Mirrored LV 블록 장치에 저장된 데이터의 복사본을 다른 블록 장치에 저장하는 방식 백업에 용이함 LE LV를 구성하는 일정한 크기의 블록으로 PE와 마찬가지로 4MB 각각의 LV들은 PE들과 1:1로 맵핑됨 Reference https://tech.</description>
    </item>
    <item>
      <title>[42cursus] GET_NEXT_LINE</title>
      <link>https://elecbrandy.github.io/posts/42cursus/get_next_line/</link>
      <pubDate>Mon, 18 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/42cursus/get_next_line/</guid>
      <description>Reading a line on a fd is way too tedious</description>
    </item>
    <item>
      <title>[42cursus] FT_PRINTF</title>
      <link>https://elecbrandy.github.io/posts/42cursus/ft_printf/</link>
      <pubDate>Wed, 15 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/42cursus/ft_printf/</guid>
      <description>putnbr and putstr aren’t enough</description>
    </item>
    <item>
      <title>[42cursus] LIBFT</title>
      <link>https://elecbrandy.github.io/posts/42cursus/libft/</link>
      <pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/42cursus/libft/</guid>
      <description>Your very first own library&#xA;Libft 42서울 본과정 입과 후 첫번째로 만나는 과제로 앞으로 본과정에서 사용할 라이브러리를 만드는 것이 목표이다. 이후 과제를 수행하며 자주 사용할 함수들이 몇가지 있기 때문에 최대한 범용성 높게 - 커스텀하기 쉽게 만드는 것을 목표로 했다. 항상 느끼는 것이지만 norm 규칙의 첫번째 목표는 카뎃이 다른 카뎃의 코드를 보았을 때 최소한의 일관성을 유지하여 쉽게 읽을 수 있게 하는 것&amp;hellip; 이고 두번째는 코드 길이를 적당히 조절함으로써 자연스럽게 모듈화를 하게 하는 것.</description>
    </item>
    <item>
      <title>C언어 빌드과정</title>
      <link>https://elecbrandy.github.io/posts/cs101/buildc/</link>
      <pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/cs101/buildc/</guid>
      <description>The script that automates software build processes with the make utility</description>
    </item>
    <item>
      <title>Makefile</title>
      <link>https://elecbrandy.github.io/posts/cs101/makefile/</link>
      <pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/cs101/makefile/</guid>
      <description>The script that automates software build processes with the make utility</description>
    </item>
    <item>
      <title>데이터 청년 캠퍼스</title>
      <link>https://elecbrandy.github.io/posts/ai/2023_data_on_air/</link>
      <pubDate>Thu, 07 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/ai/2023_data_on_air/</guid>
      <description>페이크 뉴스 탐지 시스템 구축</description>
    </item>
    <item>
      <title>사용성 테스트 101</title>
      <link>https://elecbrandy.github.io/posts/uiux/sesac-ut101/</link>
      <pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/uiux/sesac-ut101/</guid>
      <description>절대/직접/물어보지 마</description>
    </item>
    <item>
      <title>유저리서치 101</title>
      <link>https://elecbrandy.github.io/posts/uiux/sesac-ux101/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://elecbrandy.github.io/posts/uiux/sesac-ux101/</guid>
      <description>나의 첫 유저리서치</description>
    </item>
  </channel>
</rss>
